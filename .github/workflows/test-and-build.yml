name: Test & Build Images

on:
  push:
    branches: [master]
  pull_request_target:
    branches: [master]

jobs:
  backend_build_test:
    name: Backend Build and Test
    runs-on: ubuntu-latest
    env:
      BACKEND_IMAGE: registry.cern.ch/cern-sis/cat-backend:${{ github.sha }}
    defaults:
      run:
        working-directory: backend
    strategy:
      matrix:
        python-version: [3.9]
    services:
      elasticsearch:
        image: elasticsearch:7.10.1
        env:
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: -Xms1024m -Xmx1024m
          discovery.type: single-node
        ports:
          - 9200:9200

      postgresql:
        image: postgres:9.6
        env:
          POSTGRES_USER: cat
          POSTGRES_PASSWORD: cat
          POSTGRES_DB: cat
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build Image
        uses: cern-sis/gh-workflows/.github/actions/build-docker@main
        with:
          context: ./backend/
          tags: registry.cern.ch/cern-sis/cat-backend:${{ github.sha }}

      - name: Run tests
        run: |
          docker run --network=host --name=cat-backend --entrypoint poetry $BACKEND_IMAGE run python manage.py test

      - name: Push to Registry
        if: ${{ .github.event_name == 'push' }}
        uses: ./.github/actions/push
        with:
          registry: registry.cern.ch
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
          image: $BACKEND_IMAGE

  ui_build_test:
    name: UI Build and Test
    runs-on: ubuntu-latest
    env:
      UI_IMAGE: registry.cern.ch/cern-sis/cat-ui:${{ github.sha }}
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Image
        uses: cern-sis/gh-workflows/.github/actions/build-docker@main
        with:
          context: ./ui/
          tags: registry.cern.ch/cern-sis/cat-ui:${{ github.sha }}

      - name: Push to Registry
        if: ${{ .github.event_name == 'push' }}
        uses: ./.github/actions/push
        with:
          registry: registry.cern.ch
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
          image: $UI_IMAGE

  harvest_build_test:
    name: Harvest Build and Test
    runs-on: ubuntu-latest
    env:
      HARVEST_IMAGE: registry.cern.ch/cern-sis/cat-harvest:${{ github.sha }}
    defaults:
      run:
        working-directory: harvest
    strategy:
      matrix:
        python-version: [3.9]
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build Image
        uses: cern-sis/gh-workflows/.github/actions/build-docker@main
        with:
          context: ./harvest/
          tags: registry.cern.ch/cern-sis/cat-harvest:${{ github.sha }}

      - name: Run tests
        run: |
          docker run --network=host --name=cat-harvest --entrypoint poetry $HARVEST_IMAGE run pytest tests

      - name: Push to Registry
        if: ${{ .github.event_name == 'push' }}
        uses: ./.github/actions/push
        with:
          registry: registry.cern.ch
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
          image: $HARVEST_IMAGE

  Deploy_Backend:
    needs: [backend_build_test]
    uses: cern-sis/gh-workflows/.github/workflows/deploy-qa.yml@main
    with:
      project: cat
      application: cat-backend
      namespace: cat-qa
      image: registry.cern.ch/cern-sis/cat-backend
    secrets:
      PAT: ${{ secrets.PAT_FIRE_EVENTS_ON_CERN_SIS_KUBERNETES }}

  Deploy_UI:
    needs: [ui_build_test]
    uses: cern-sis/gh-workflows/.github/workflows/deploy-qa.yml@main
    with:
      project: cat
      application: cat-ui
      namespace: cat-qa
      image: registry.cern.ch/cern-sis/cat-ui
    secrets:
      PAT: ${{ secrets.PAT_FIRE_EVENTS_ON_CERN_SIS_KUBERNETES }}

  Deploy_Harvest:
    needs: [harvest_build_test]
    uses: cern-sis/gh-workflows/.github/workflows/deploy-qa.yml@main
    with:
      project: cat
      application: cat-harvest
      namespace: cat-qa
      image: registry.cern.ch/cern-sis/cat-harvest
    secrets:
      PAT: ${{ secrets.PAT_FIRE_EVENTS_ON_CERN_SIS_KUBERNETES }}

