name: Test & Build Images

on:
  push:
    branches: [master]
  pull_request_target:
    branches: [master]

jobs:
  backend_build:
    uses: cern-sis/gh-workflows/.github/workflows/build-image.yml@main
    with:
      registry: registry.cern.ch
      context: ./backend/
      tags: registry.cern.ch/cern-sis/cat-backend:latest,registry.cern.ch/cern-sis/cat-backend:${{ github.sha }}
      push: true
    secrets:
      registry_username: ${{ secrets.HARBOR_USERNAME }}
      registry_password: ${{ secrets.HARBOR_PASSWORD }}
  
  ui_build:
    uses: cern-sis/gh-workflows/.github/workflows/build-image.yml@main
    with:
      registry: registry.cern.ch
      context: ./ui/
      tags: registry.cern.ch/cern-sis/cat-ui:latest,registry.cern.ch/cern-sis/cat-ui:${{ github.sha }}
      push: true
    secrets:
      registry_username: ${{ secrets.HARBOR_USERNAME }}
      registry_password: ${{ secrets.HARBOR_PASSWORD }}

  harvest_build:
    uses: cern-sis/gh-workflows/.github/workflows/build-image.yml@main
    with:
      registry: registry.cern.ch
      context: ./harvest/
      push: true
      tags: registry.cern.ch/cern-sis/cat-harvest:latest,registry.cern.ch/cern-sis/cat-harvest:${{ github.sha }}
    secrets:
      registry_username: ${{ secrets.HARBOR_USERNAME }}
      registry_password: ${{ secrets.HARBOR_PASSWORD }}

  Test_Backend:
    name: Test Backend
    runs-on: ubuntu-latest
    needs: [backend_build, ui_build, harvest_build]
    defaults:
      run:
        working-directory: backend
    strategy:
      matrix:
        python-version: [3.9]
    services:
      elasticsearch:
        image: elasticsearch:7.10.1
        env:
          bootstrap.memory_lock: true
          ES_JAVA_OPTS: -Xms1024m -Xmx1024m
          discovery.type: single-node
        ports:
          - 9200:9200

      postgresql:
        image: postgres:9.6
        env:
          POSTGRES_USER: cat
          POSTGRES_PASSWORD: cat
          POSTGRES_DB: cat
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Show python dependencies
        run: |
          pip freeze

      - name: Run tests
        run: |
          poetry run python manage.py test

  Test_Harvest:
    name: Test Harvest
    needs: [backend_build, ui_build, harvest_build]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: harvest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Show python dependencies
        run: |
          pip freeze

      - name: Run tests
        run: |
          poetry run pytest tests

  Deploy_Backend:
    needs: [Test_Harvest, Test_Backend]
    uses: cern-sis/gh-workflows/.github/workflows/deploy-qa.yml@main
    with:
      project: cat
      application: cat-backend
      namespace: cat-qa
      image: registry.cern.ch/cern-sis/cat-backend
    secrets:
      PAT: ${{ secrets.PATH_FIRE_EVENTS_ON_CERN_SIS_KUBERNETES }}

  Deploy_UI:
    needs: [Test_Harvest, Test_Backend]
    uses: cern-sis/gh-workflows/.github/workflows/deploy-qa.yml@main
    with:
      project: cat
      application: cat-ui
      namespace: cat-qa
      image: registry.cern.ch/cern-sis/cat-ui
    secrets:
      PAT: ${{ secrets.PATH_FIRE_EVENTS_ON_CERN_SIS_KUBERNETES }}

  Deploy_Harvest:
    needs: [Test_Harvest, Test_Backend]
    uses: cern-sis/gh-workflows/.github/workflows/deploy-qa.yml@main
    with:
      project: cat
      application: cat-harvest
      namespace: cat-qa
      image: registry.cern.ch/cern-sis/cat-harvest
    secrets:
      PAT: ${{ secrets.PATH_FIRE_EVENTS_ON_CERN_SIS_KUBERNETES }}

